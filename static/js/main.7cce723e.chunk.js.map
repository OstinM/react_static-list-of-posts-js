{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","serverPosts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"018IAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KAErB,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGH,IAFL,KAOE,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QCjBIG,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACGG,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CACEA,QAASA,GACJA,EAAQS,UCPRC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGP,UAAU,WAAWC,KAAI,iBAAYM,EAAKT,OAA7C,SACIS,EAAKV,SCCEW,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,sBAAKT,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGS,EAAKC,QAGR,cAAC,EAAD,CACEH,KAAME,EAAKF,OAGb,mBAAGP,UAAU,iBAAb,SACGS,EAAKV,UAKgB,IAAzBU,EAAKN,SAASQ,OACb,cAAC,EAAD,CACER,SAAUM,EAAKN,WAGjB,mBAAG,UAAQ,oBAAX,iCCzBOS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OACtB,qBAAKb,UAAU,WAAf,SACGa,EAAYT,KAAI,SAAAK,GAAI,OACnB,cAAC,EAAD,CACEA,KAAMA,GACDA,EAAKJ,UCQLQ,EAAcC,EAAgBV,KAAI,SAAAK,GAAI,kCAC9CA,GAD8C,IAGjDF,MAPmBQ,EAOAN,EAAKM,OANxBC,EAAgBC,MAAK,SAAAV,GAAI,OAAIA,EAAKF,KAAOU,MAOzCZ,UAZoBe,EAYIT,EAAKJ,GAX7Bc,EAAmBC,QAAO,SAAAxB,GAAO,OAAIA,EAAQsB,SAAWA,QADpC,IAAAA,EAIDH,KAWRM,EAAM,kBACjB,0BAASrB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUa,YAAaA,QCrB3BS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7cce723e.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">\n          {name}\n        </strong>\n\n        by\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import './CommentList.scss';\n\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo\n        comment={comment}\n        key={comment.id}\n      />\n    ))}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    { user.name }\n  </a>\n);\n","import './PostInfo.scss';\n\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {post.title}\n      </h3>\n\n      <UserInfo\n        user={post.user}\n      />\n\n      <p className=\"PostInfo__body\">\n        {post.body}\n      </p>\n\n    </div>\n\n    {post.comments.length !== 0 ? (\n      <CommentList\n        comments={post.comments}\n      />\n    ) : (\n      <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n    )\n    }\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ serverPosts }) => (\n  <div className=\"PostList\">\n    {serverPosts.map(post => (\n      <PostInfo\n        post={post}\n        key={post.id}\n      />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nconst getCommentsId = postId => (\n  commentsFromServer.filter(comment => comment.postId === postId)\n);\n\nconst findUserById = userId => (\n  usersFromServer.find(user => user.id === userId)\n);\n\nexport const serverPosts = postsFromServer.map(post => ({\n  ...post,\n\n  user: findUserById(post.userId),\n  comments: getCommentsId(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList serverPosts={serverPosts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}